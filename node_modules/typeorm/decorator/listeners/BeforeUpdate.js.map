{"version":3,"sources":["../../src/decorator/listeners/BeforeUpdate.ts"],"names":[],"mappings":";;;AAAA,4BAA8C;AAC9C,8EAA2E;AAG3E;;GAEG;AACH,SAAgB,YAAY;IACxB,OAAO,UAAU,MAAc,EAAE,YAAoB;QAEjD,0BAAsB,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC;YAC1C,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,uCAAkB,CAAC,aAAa;SACX,CAAC,CAAC;IACrC,CAAC,CAAC;AACN,CAAC;AATD,oCASC","file":"BeforeUpdate.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../\";\nimport {EventListenerTypes} from \"../../metadata/types/EventListenerTypes\";\nimport {EntityListenerMetadataArgs} from \"../../metadata-args/EntityListenerMetadataArgs\";\n\n/**\n * Calls a method on which this decorator is applied before this entity update.\n */\nexport function BeforeUpdate(): PropertyDecorator {\n    return function (object: Object, propertyName: string) {\n\n        getMetadataArgsStorage().entityListeners.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            type: EventListenerTypes.BEFORE_UPDATE\n        } as EntityListenerMetadataArgs);\n    };\n}"],"sourceRoot":"../.."}