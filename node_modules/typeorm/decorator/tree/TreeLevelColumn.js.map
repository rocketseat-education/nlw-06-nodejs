{"version":3,"sources":["../../src/decorator/tree/TreeLevelColumn.ts"],"names":[],"mappings":";;;AAAA,4BAA8C;AAG9C;;GAEG;AACH,SAAgB,eAAe;IAC3B,OAAO,UAAU,MAAc,EAAE,YAAoB;QAEjD,0BAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,EAAE;SACQ,CAAC,CAAC;IAC7B,CAAC,CAAC;AACN,CAAC;AAVD,0CAUC","file":"TreeLevelColumn.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../\";\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\n\n/**\n * Creates a \"level\"/\"length\" column to the table that holds a closure table.\n */\nexport function TreeLevelColumn(): PropertyDecorator {\n    return function (object: Object, propertyName: string) {\n\n        getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"treeLevel\",\n            options: {}\n        } as ColumnMetadataArgs);\n    };\n}\n"],"sourceRoot":"../.."}