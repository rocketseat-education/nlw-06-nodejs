{"version":3,"sources":["../../src/commands/MigrationCreateCommand.ts"],"names":[],"mappings":"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","file":"MigrationCreateCommand.js","sourcesContent":["import {ConnectionOptionsReader} from \"../connection/ConnectionOptionsReader\";\nimport {CommandUtils} from \"./CommandUtils\";\nimport {camelCase} from \"../util/StringUtils\";\nimport * as yargs from \"yargs\";\nimport chalk from \"chalk\";\n\n/**\n * Creates a new migration file.\n */\nexport class MigrationCreateCommand implements yargs.CommandModule {\n\n    command = \"migration:create\";\n    describe = \"Creates a new migration file.\";\n    aliases = \"migrations:create\";\n\n    builder(args: yargs.Argv) {\n        return args\n            .option(\"c\", {\n                alias: \"connection\",\n                default: \"default\",\n                describe: \"Name of the connection on which run a query.\"\n            })\n            .option(\"n\", {\n                alias: \"name\",\n                describe: \"Name of the migration class.\",\n                demand: true\n            })\n            .option(\"d\", {\n                alias: \"dir\",\n                describe: \"Directory where migration should be created.\"\n            })\n            .option(\"f\", {\n                alias: \"config\",\n                default: \"ormconfig\",\n                describe: \"Name of the file with connection configuration.\"\n            })\n            .option(\"o\", {\n                alias: \"outputJs\",\n                type: \"boolean\",\n                default: false,\n                describe: \"Generate a migration file on Javascript instead of Typescript\",\n            });\n    }\n\n    async handler(args: yargs.Arguments) {\n        if (args._[0] === \"migrations:create\") {\n            console.log(\"'migrations:create' is deprecated, please use 'migration:create' instead\");\n        }\n\n        try {\n            const timestamp = new Date().getTime();\n            const fileContent = args.outputJs ?\n                MigrationCreateCommand.getJavascriptTemplate(args.name as any, timestamp)\n                : MigrationCreateCommand.getTemplate(args.name as any, timestamp);\n            const extension = args.outputJs ? \".js\" : \".ts\";\n            const filename = timestamp + \"-\" + args.name + extension;\n            let directory = args.dir as string | undefined;\n\n            // if directory is not set then try to open tsconfig and find default path there\n            if (!directory) {\n                try {\n                    const connectionOptionsReader = new ConnectionOptionsReader({\n                        root: process.cwd(),\n                        configName: args.config as any\n                    });\n                    const connectionOptions = await connectionOptionsReader.get(args.connection as any);\n                    directory = connectionOptions.cli ? (connectionOptions.cli.migrationsDir || \"\") : \"\";\n                } catch (err) { }\n            }\n\n            if (directory && !directory.startsWith(\"/\")) {\n                directory = process.cwd() + \"/\" + directory;\n            }\n            const path = (directory ? (directory + \"/\") : \"\") + filename;\n            await CommandUtils.createFile(path, fileContent);\n            console.log(`Migration ${chalk.blue(path)} has been generated successfully.`);\n\n        } catch (err) {\n            console.log(chalk.black.bgRed(\"Error during migration creation:\"));\n            console.error(err);\n            process.exit(1);\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    // Protected Static Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Gets contents of the migration file.\n     */\n    protected static getTemplate(name: string, timestamp: number): string {\n        return `import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class ${camelCase(name, true)}${timestamp} implements MigrationInterface {\n\n    public async up(queryRunner: QueryRunner): Promise<void> {\n    }\n\n    public async down(queryRunner: QueryRunner): Promise<void> {\n    }\n\n}\n`;\n    }\n\n    /**\n     * Gets contents of the migration file in Javascript.\n     */\n    protected static getJavascriptTemplate(name: string, timestamp: number): string {\n        return `const { MigrationInterface, QueryRunner } = require(\"typeorm\");\n\nmodule.exports = class ${camelCase(name, true)}${timestamp} {\n\n    async up(queryRunner) {\n    }\n\n    async down(queryRunner) {\n    }\n}\n        `;\n    }\n}\n"],"sourceRoot":".."}