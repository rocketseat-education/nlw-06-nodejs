{"version":3,"sources":["../../src/commands/MigrationShowCommand.ts"],"names":[],"mappings":";;;;AAAA,kCAA0C;AAC1C,iFAA8E;AAE9E,uDAAmC;AAEnC,wDAA0B;AAE1B;;GAEG;AACH;IAAA;QAEE,YAAO,GAAG,gBAAgB,CAAC;QAC3B,aAAQ,GAAG,2DAA2D,CAAC;IA+CzE,CAAC;IA7CC,sCAAO,GAAP,UAAQ,IAAgB;QACtB,OAAO,IAAI;aACR,MAAM,CAAC,YAAY,EAAE;YACpB,KAAK,EAAE,GAAG;YACV,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,8CAA8C;SACzD,CAAC;aACD,MAAM,CAAC,QAAQ,EAAE;YAChB,KAAK,EAAE,GAAG;YACV,OAAO,EAAE,WAAW;YACpB,QAAQ,EAAE,iDAAiD;SAC5D,CAAC,CAAC;IACP,CAAC;IAEK,sCAAO,GAAb,UAAc,IAAqB;;;;;;wBAC7B,UAAU,GAAyB,SAAS,CAAC;;;;wBAEzC,uBAAuB,GAAG,IAAI,iDAAuB,CAAC;4BAC1D,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE;4BACnB,UAAU,EAAE,IAAI,CAAC,MAAa;yBAC/B,CAAC,CAAC;wBACuB,qBAAM,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,UAAiB,CAAC,EAAA;;wBAA7E,iBAAiB,GAAG,SAAyD;wBACnF,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE;4BAC/B,WAAW,EAAE,EAAE;4BACf,WAAW,EAAE,KAAK;4BAClB,aAAa,EAAE,KAAK;4BACpB,UAAU,EAAE,KAAK;4BACjB,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;yBACtC,CAAC,CAAC;wBACU,qBAAM,wBAAgB,CAAC,iBAAiB,CAAC,EAAA;;wBAAtD,UAAU,GAAG,SAAyC,CAAC;wBAC3B,qBAAM,UAAU,CAAC,cAAc,EAAE,EAAA;;wBAAvD,mBAAmB,GAAG,SAAiC;wBAC7D,qBAAM,UAAU,CAAC,KAAK,EAAE,EAAA;;wBAAxB,SAAwB,CAAC;wBAEzB,6DAA6D;wBAC7D,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;6BAGtC,UAAU,EAAV,wBAAU;wBAAE,qBAAO,UAAyB,CAAC,KAAK,EAAE,EAAA;;wBAAxC,SAAwC,CAAC;;;wBAEzD,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAC;wBAC/D,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC;wBACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;;;;KAEnB;IAEH,2BAAC;AAAD,CAlDA,AAkDC,IAAA;AAlDY,oDAAoB","file":"MigrationShowCommand.js","sourcesContent":["import {createConnection} from \"../index\";\nimport {ConnectionOptionsReader} from \"../connection/ConnectionOptionsReader\";\nimport {Connection} from \"../connection/Connection\";\nimport * as process from \"process\";\nimport * as yargs from \"yargs\";\nimport chalk from \"chalk\";\n\n/**\n * Runs migration command.\n */\nexport class MigrationShowCommand implements yargs.CommandModule {\n\n  command = \"migration:show\";\n  describe = \"Show all migrations and whether they have been run or not\";\n\n  builder(args: yargs.Argv) {\n    return args\n      .option(\"connection\", {\n        alias: \"c\",\n        default: \"default\",\n        describe: \"Name of the connection on which run a query.\"\n      })\n      .option(\"config\", {\n        alias: \"f\",\n        default: \"ormconfig\",\n        describe: \"Name of the file with connection configuration.\"\n      });\n  }\n\n  async handler(args: yargs.Arguments) {\n    let connection: Connection|undefined = undefined;\n    try {\n      const connectionOptionsReader = new ConnectionOptionsReader({\n        root: process.cwd(),\n        configName: args.config as any\n      });\n      const connectionOptions = await connectionOptionsReader.get(args.connection as any);\n      Object.assign(connectionOptions, {\n        subscribers: [],\n        synchronize: false,\n        migrationsRun: false,\n        dropSchema: false,\n        logging: [\"query\", \"error\", \"schema\"]\n      });\n      connection = await createConnection(connectionOptions);\n      const unappliedMigrations = await connection.showMigrations();\n      await connection.close();\n\n      // return error code if there are unapplied migrations for CI\n      process.exit(unappliedMigrations ? 1 : 0);\n\n    } catch (err) {\n      if (connection) await (connection as Connection).close();\n\n      console.log(chalk.black.bgRed(\"Error during migration show:\"));\n      console.error(err);\n      process.exit(1);\n    }\n  }\n\n}\n"],"sourceRoot":".."}