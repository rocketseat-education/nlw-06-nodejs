{"version":3,"sources":["../../src/error/UsingJoinTableOnlyOnOneSideAllowedError.ts"],"names":[],"mappings":";;;;AAGA;GACG;AACH;IAA6D,mEAAK;IAG9D,iDAAY,cAA8B,EAAE,QAA0B;QAAtE,YACI,iBAAO,SAKV;QARD,UAAI,GAAG,yCAAyC,CAAC;QAI7C,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,uCAAuC,CAAC,SAAS,CAAC,CAAC;QAC/E,KAAI,CAAC,OAAO,GAAG,gFAAgF;aAC3F,UAAQ,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,aAAQ,QAAQ,CAAC,qBAAqB,CAAC,IAAI,SAAI,QAAQ,CAAC,eAAgB,CAAC,YAAY,MAAG,CAAA;YAC5I,wFAAwF,CAAC;;IACjG,CAAC;IAEL,8CAAC;AAAD,CAXA,AAWC,CAX4D,KAAK,GAWjE;AAXY,0FAAuC","file":"UsingJoinTableOnlyOnOneSideAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\n\n/**\n */\nexport class UsingJoinTableOnlyOnOneSideAllowedError extends Error {\n    name = \"UsingJoinTableOnlyOnOneSideAllowedError\";\n\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super();\n        Object.setPrototypeOf(this, UsingJoinTableOnlyOnOneSideAllowedError.prototype);\n        this.message = `Using JoinTable is allowed only on one side of the many-to-many relationship. ` +\n            `Both ${entityMetadata.name}#${relation.propertyName} and ${relation.inverseEntityMetadata.name}#${relation.inverseRelation!.propertyName} ` +\n            `has JoinTable decorators. Choose one of them and left JoinColumn decorator only on it.`;\n    }\n\n}"],"sourceRoot":".."}