{"version":3,"sources":["../../src/error/CustomRepositoryDoesNotHaveEntityError.ts"],"names":[],"mappings":";;;;AAAA;;GAEG;AACH;IAA4D,kEAAK;IAG7D,gDAAY,UAAe;QAA3B,YACI,iBAAO,SAIV;QAPD,UAAI,GAAG,wCAAwC,CAAC;QAI5C,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,sCAAsC,CAAC,SAAS,CAAC,CAAC;QAC9E,KAAI,CAAC,OAAO,GAAG,wBAAqB,UAAU,YAAY,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,qCAAiC;YAC/I,uEAAuE,CAAC;;IAChF,CAAC;IAEL,6CAAC;AAAD,CAVA,AAUC,CAV2D,KAAK,GAUhE;AAVY,wFAAsC","file":"CustomRepositoryDoesNotHaveEntityError.js","sourcesContent":["/**\n * Thrown if custom repositories that extend AbstractRepository classes does not have managed entity.\n */\nexport class CustomRepositoryDoesNotHaveEntityError extends Error {\n    name = \"CustomRepositoryDoesNotHaveEntityError\";\n\n    constructor(repository: any) {\n        super();\n        Object.setPrototypeOf(this, CustomRepositoryDoesNotHaveEntityError.prototype);\n        this.message = `Custom repository ${repository instanceof Function ? repository.name : repository.constructor.name} does not have managed entity. ` +\n            `Did you forget to specify entity for it @EntityRepository(MyEntity)? `;\n    }\n\n}"],"sourceRoot":".."}