{"version":3,"sources":["../../src/error/UsingJoinTableIsNotAllowedError.ts"],"names":[],"mappings":";;;;AAGA;GACG;AACH;IAAqD,2DAAK;IAGtD,yCAAY,cAA8B,EAAE,QAA0B;QAAtE,YACI,iBAAO,SAKV;QARD,UAAI,GAAG,iCAAiC,CAAC;QAIrC,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,+BAA+B,CAAC,SAAS,CAAC,CAAC;QACvE,KAAI,CAAC,OAAO,GAAG,wBAAsB,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,gBAAa;aACvF,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,aAAQ,QAAQ,CAAC,YAAY,gBAAa,CAAA;YACzF,+DAA+D,CAAC;;IACxE,CAAC;IAEL,sCAAC;AAAD,CAXA,AAWC,CAXoD,KAAK,GAWzD;AAXY,0EAA+B","file":"UsingJoinTableIsNotAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\n\n/**\n */\nexport class UsingJoinTableIsNotAllowedError extends Error {\n    name = \"UsingJoinTableIsNotAllowedError\";\n\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super();\n        Object.setPrototypeOf(this, UsingJoinTableIsNotAllowedError.prototype);\n        this.message = `Using JoinTable on ${entityMetadata.name}#${relation.propertyName} is wrong. ` +\n            `${entityMetadata.name}#${relation.propertyName} has ${relation.relationType} relation, ` +\n            `however you can use JoinTable only on many-to-many relations.`;\n    }\n\n}"],"sourceRoot":".."}