{"version":3,"sources":["../../src/error/ColumnTypeUndefinedError.ts"],"names":[],"mappings":";;;;AAAA;;;GAGG;AACH;IAA8C,oDAAK;IAG/C,kCAAY,MAAc,EAAE,YAAoB;QAAhD,YACI,iBAAO,SAMV;QATD,UAAI,GAAG,0BAA0B,CAAC;QAI9B,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,CAAC;QAChE,KAAI,CAAC,OAAO,GAAG,qBAAmB,MAAM,CAAC,WAAW,CAAC,IAAI,SAAI,YAAY,4CAAyC;YAC9G,2FAAyF;YACzF,uIAAqI;YACrI,8FAA8F,CAAC;;IACvG,CAAC;IAEL,+BAAC;AAAD,CAZA,AAYC,CAZ6C,KAAK,GAYlD;AAZY,4DAAwB","file":"ColumnTypeUndefinedError.js","sourcesContent":["/**\n * Thrown when ORM cannot get column's type automatically.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nexport class ColumnTypeUndefinedError extends Error {\n    name = \"ColumnTypeUndefinedError\";\n\n    constructor(object: Object, propertyName: string) {\n        super();\n        Object.setPrototypeOf(this, ColumnTypeUndefinedError.prototype);\n        this.message = `Column type for ${object.constructor.name}#${propertyName} is not defined and cannot be guessed. ` +\n            `Make sure you have turned on an \"emitDecoratorMetadata\": true option in tsconfig.json. ` +\n            `Also make sure you have imported \"reflect-metadata\" on top of the main entry file in your application (before any entity imported).` +\n            `If you are using JavaScript instead of TypeScript you must explicitly provide a column type.`;\n    }\n\n}"],"sourceRoot":".."}