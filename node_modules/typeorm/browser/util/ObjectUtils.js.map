{"version":3,"sources":["../browser/src/util/ObjectUtils.ts"],"names":[],"mappings":";AAAA;IAAA;IAyCA,CAAC;IAbC;;;;;OAKG;IACI,kBAAM,GAAb,UAAc,MAAc;;QAAE,iBAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,gCAAiB;;;YAC7C,KAAqB,IAAA,YAAA,SAAA,OAAO,CAAA,gCAAA,qDAAE;gBAAzB,IAAM,MAAM,oBAAA;;oBACf,KAAmB,IAAA,oBAAA,SAAA,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAA,CAAA,gBAAA,4BAAE;wBAAlD,IAAM,IAAI,WAAA;wBACV,MAAc,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;qBACxC;;;;;;;;;aACF;;;;;;;;;IACH,CAAC;IACH,kBAAC;AAAD,CAzCA,AAyCC,IAAA","file":"ObjectUtils.js","sourcesContent":["export class ObjectUtils {\n  /**\n   * Copy the values of all of the enumerable own properties from one or more source objects to a\n   * target object.\n   * @param target The target object to copy to.\n   * @param source The source object from which to copy properties.\n   */\n  static assign<T, U>(target: T, source: U): void;\n\n  /**\n   * Copy the values of all of the enumerable own properties from one or more source objects to a\n   * target object.\n   * @param target The target object to copy to.\n   * @param source1 The first source object from which to copy properties.\n   * @param source2 The second source object from which to copy properties.\n   */\n  static assign<T, U, V>(target: T, source1: U, source2: V): void;\n\n  /**\n   * Copy the values of all of the enumerable own properties from one or more source objects to a\n   * target object.\n   * @param target The target object to copy to.\n   * @param source1 The first source object from which to copy properties.\n   * @param source2 The second source object from which to copy properties.\n   * @param source3 The third source object from which to copy properties.\n   */\n  static assign<T, U, V, W>(target: T, source1: U, source2: V, source3: W): void;\n\n  /**\n   * Copy the values of all of the enumerable own properties from one or more source objects to a\n   * target object.\n   * @param target The target object to copy to.\n   * @param sources One or more source objects from which to copy properties\n   */\n  static assign(target: object, ...sources: any[]): void {\n    for (const source of sources) {\n      for (const prop of Object.getOwnPropertyNames(source)) {\n          (target as any)[prop] = source[prop];\n      }\n    }\n  }\n}"],"sourceRoot":".."}