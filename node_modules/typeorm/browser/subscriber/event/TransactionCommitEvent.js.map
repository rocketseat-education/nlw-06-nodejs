{"version":3,"sources":["../browser/src/subscriber/event/TransactionCommitEvent.ts"],"names":[],"mappings":"","file":"TransactionCommitEvent.js","sourcesContent":["import {EntityManager} from \"../../entity-manager/EntityManager\";\nimport {Connection} from \"../../connection/Connection\";\nimport {QueryRunner} from \"../../query-runner/QueryRunner\";\n\n/**\n * TransactionCommitEvent is an object that broadcaster sends to the entity subscriber when an transaction is committed.\n */\nexport interface TransactionCommitEvent {\n\n    /**\n     * Connection used in the event.\n     */\n    connection: Connection;\n\n    /**\n     * QueryRunner used in the event transaction.\n     * All database operations in the subscribed event listener should be performed using this query runner instance.\n     */\n    queryRunner: QueryRunner;\n\n    /**\n     * EntityManager used in the event transaction.\n     * All database operations in the subscribed event listener should be performed using this entity manager instance.\n     */\n    manager: EntityManager;\n\n}\n"],"sourceRoot":"../.."}