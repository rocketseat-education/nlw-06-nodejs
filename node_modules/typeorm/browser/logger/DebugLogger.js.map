{"version":3,"sources":["../browser/src/logger/DebugLogger.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAC,aAAa,EAAC,MAAM,2BAA2B,CAAC;AAExD;;GAEG;AACH;IAAA;QACY,kBAAa,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC3C,oBAAe,GAAG,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC/C,mBAAc,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC7C,qBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC3C,mBAAc,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAE5C,aAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;QAChC,cAAS,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;QAClC,cAAS,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;IAiF9C,CAAC;IA/EG;;OAEG;IACH,8BAAQ,GAAR,UAAS,KAAa,EAAE,UAAkB,EAAE,WAAyB;QACjE,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;YAC5D,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;aACjD;SACJ;IACL,CAAC;IAED;;OAEG;IACH,mCAAa,GAAb,UAAc,KAAa,EAAE,KAAa,EAAE,UAAkB,EAAE,WAAyB;QACrF,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;YAC9B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;YAC9D,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;aACnD;YACD,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SAC1C;IACL,CAAC;IAED;;OAEG;IACH,kCAAY,GAAZ,UAAa,IAAY,EAAE,KAAa,EAAE,UAAkB,EAAE,WAAyB;QACnF,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC7B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;YAC7D,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;SAChD;IACL,CAAC;IAED;;OAEG;IACH,oCAAc,GAAd,UAAe,OAAe,EAAE,WAAyB;QACrD,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAC/B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;SAClC;IACL,CAAC;IAED;;OAEG;IACH,kCAAY,GAAZ,UAAa,OAAe,EAAE,WAAyB;QACnD,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC7B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;SAChC;IACL,CAAC;IAED;;;OAGG;IACH,yBAAG,GAAH,UAAI,KAA8B,EAAE,OAAY,EAAE,WAAyB;QACvE,QAAQ,KAAK,EAAE;YACX,KAAK,KAAK;gBACN,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;oBACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;iBAC1B;gBACD,MAAM;YACV,KAAK,MAAM;gBACP,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;oBACxB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;iBAC3B;gBACD,MAAM;YACV,KAAK,MAAM;gBACP,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;oBACxB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;iBAC3B;gBACD,MAAM;SACb;IACL,CAAC;IACL,kBAAC;AAAD,CA1FA,AA0FC,IAAA","file":"DebugLogger.js","sourcesContent":["import debug from \"debug\";\nimport {Logger} from \"./Logger\";\nimport {QueryRunner} from \"../\";\nimport {PlatformTools} from \"../platform/PlatformTools\";\n\n/**\n * Performs logging of the events in TypeORM via debug library.\n */\nexport class DebugLogger implements Logger {\n    private debugQueryLog = debug(\"typeorm:query:log\");\n    private debugQueryError = debug(\"typeorm:query:error\");\n    private debugQuerySlow = debug(\"typeorm:query:slow\");\n    private debugSchemaBuild = debug(\"typeorm:schema\");\n    private debugMigration = debug(\"typeorm:migration\");\n\n    private debugLog = debug(\"typeorm:log\");\n    private debugInfo = debug(\"typeorm:info\");\n    private debugWarn = debug(\"typeorm:warn\");\n\n    /**\n     * Logs query and parameters used in it.\n     */\n    logQuery(query: string, parameters?: any[], queryRunner?: QueryRunner) {\n        if (this.debugQueryLog.enabled) {\n            this.debugQueryLog(PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQueryLog(\"parameters:\", parameters);\n            }\n        }\n    }\n\n    /**\n     * Logs query that failed.\n     */\n    logQueryError(error: string, query: string, parameters?: any[], queryRunner?: QueryRunner) {\n        if (this.debugQueryError.enabled) {\n            this.debugQueryError(PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQueryError(\"parameters:\", parameters);\n            }\n            this.debugQueryError(\"error: \", error);\n        }\n    }\n\n    /**\n     * Logs query that is slow.\n     */\n    logQuerySlow(time: number, query: string, parameters?: any[], queryRunner?: QueryRunner) {\n        if (this.debugQuerySlow.enabled) {\n            this.debugQuerySlow(PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQuerySlow(\"parameters:\", parameters);\n            }\n            this.debugQuerySlow(\"execution time:\", time);\n        }\n    }\n\n    /**\n     * Logs events from the schema build process.\n     */\n    logSchemaBuild(message: string, queryRunner?: QueryRunner) {\n        if (this.debugSchemaBuild.enabled) {\n            this.debugSchemaBuild(message);\n        }\n    }\n\n    /**\n     * Logs events from the migration run process.\n     */\n    logMigration(message: string, queryRunner?: QueryRunner) {\n        if (this.debugMigration.enabled) {\n            this.debugMigration(message);\n        }\n    }\n\n    /**\n     * Perform logging using given logger.\n     * Log has its own level and message.\n     */\n    log(level: \"log\" | \"info\" | \"warn\", message: any, queryRunner?: QueryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.debugLog.enabled) {\n                    this.debugLog(message);\n                }\n                break;\n            case \"info\":\n                if (this.debugInfo.enabled) {\n                    this.debugInfo(message);\n                }\n                break;\n            case \"warn\":\n                if (this.debugWarn.enabled) {\n                    this.debugWarn(message);\n                }\n                break;\n        }\n    }\n}\n"],"sourceRoot":".."}