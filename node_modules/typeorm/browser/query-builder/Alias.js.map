{"version":3,"sources":["../browser/src/query-builder/Alias.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,WAAW,EAAC,MAAM,qBAAqB,CAAC;AAEhD;GACG;AACH;IAiBI,eAAY,KAAa;QACrB,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IAID,sBAAI,yBAAM;aAAV;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAI,8BAAW;aAAf;YACI,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAI,2BAAQ;aAIZ;YACI,IAAI,CAAC,IAAI,CAAC,SAAS;gBACf,MAAM,IAAI,KAAK,CAAC,sDAAmD,IAAI,CAAC,IAAI,OAAG,CAAC,CAAC;YAErF,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aATD,UAAa,QAAwB;YACjC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC9B,CAAC;;;OAAA;IASL,YAAC;AAAD,CA1CA,AA0CC,IAAA","file":"Alias.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {ObjectUtils} from \"../util/ObjectUtils\";\n\n/**\n */\nexport class Alias {\n\n    type: \"from\"|\"select\"|\"join\"|\"other\"; // todo: make something with \"other\"\n\n    name: string;\n\n    /**\n     * Table on which this alias is applied.\n     * Used only for aliases which select custom tables.\n     */\n    tablePath?: string;\n\n    /**\n     * If this alias is for sub query.\n     */\n    subQuery?: string;\n\n    constructor(alias?: Alias) {\n        ObjectUtils.assign(this, alias || {});\n    }\n\n    private _metadata?: EntityMetadata;\n\n    get target(): Function|string {\n        return this.metadata.target;\n    }\n\n    get hasMetadata(): boolean {\n        return !!this._metadata;\n    }\n\n    set metadata(metadata: EntityMetadata) {\n        this._metadata = metadata;\n    }\n\n    get metadata(): EntityMetadata {\n        if (!this._metadata)\n            throw new Error(`Cannot get entity metadata for the given alias \"${this.name}\"`);\n\n        return this._metadata;\n    }\n\n}\n"],"sourceRoot":".."}